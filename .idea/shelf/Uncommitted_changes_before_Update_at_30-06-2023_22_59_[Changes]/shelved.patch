Index: proyecto1/src/main/Test/java/Logica/AbastecimientoTest.java
===================================================================
diff --git a/proyecto1/src/main/Test/java/Logica/AbastecimientoTest.java b/proyecto1/src/main/Test/java/Logica/AbastecimientoTest.java
deleted file mode 100644
--- a/proyecto1/src/main/Test/java/Logica/AbastecimientoTest.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ /dev/null	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
@@ -1,26 +0,0 @@
-package Logica;
-
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-class AbastecimientoTest {
-    private Semi_cama semi_cama;
-    private Salon_cama salon_cama;
-
-    @Test
-    void getSemi_cama() {
-        semi_cama = new Semi_cama();
-
-        assertEquals(1,semi_cama.getAsiento(1) );
-
-    }
-
-    @Test
-    void getSalonCama() {
-        salon_cama = new Salon_cama();
-
-        assertEquals(1,salon_cama.getAsiento(1) );
-
-    }
-}
\ No newline at end of file
Index: proyecto1/src/main/Test/java/Logica/EstacionTest.java
===================================================================
diff --git a/proyecto1/src/main/Test/java/Logica/EstacionTest.java b/proyecto1/src/main/Test/java/Logica/EstacionTest.java
deleted file mode 100644
--- a/proyecto1/src/main/Test/java/Logica/EstacionTest.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ /dev/null	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
@@ -1,20 +0,0 @@
-package Logica;
-
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-class EstacionTest {
-
-    @Test
-    void reservarAsiento() {
-    }
-
-    @Test
-    void getAsiento() {
-    }
-
-    @Test
-    void getBus() {
-    }
-}
\ No newline at end of file
Index: proyecto1/src/main/Test/java/Logica/AsientoTest.java
===================================================================
diff --git a/proyecto1/src/main/Test/java/Logica/AsientoTest.java b/proyecto1/src/main/Test/java/Logica/AsientoTest.java
deleted file mode 100644
--- a/proyecto1/src/main/Test/java/Logica/AsientoTest.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ /dev/null	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
@@ -1,16 +0,0 @@
-package Logica;
-
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-class AsientoTest {
-
-    @Test
-    void getEstado() {
-    }
-
-    @Test
-    void setEstado() {
-    }
-}
\ No newline at end of file
Index: proyecto1/src/main/java/Logica/Estacion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Logica;\r\nimport java.util.ArrayList;\r\n\r\npublic class Estacion {\r\n    public static final int SEMI_CAMA = 1;\r\n    public static final int SALON_CAMA = 2;\r\n    private static Estacion instance;\r\n    private ArrayList<Abastecimiento> abastecimientoList;\r\n\r\n    public Estacion() {\r\n        abastecimientoList = new ArrayList<>();\r\n        // incorporar nombres asociados a los buses\r\n        for (int c = 8; c < 22 + 1; c = c + 1) {\r\n            abastecimientoList.add(new Abastecimiento());\r\n        }\r\n    }\r\n\r\n    public void reservarAsiento(int cual_bus, int cual_numero, int cual_horario) {\r\n        Abastecimiento hora = abastecimientoList.get(cual_horario - 8);\r\n        if (cual_bus == SEMI_CAMA) {\r\n            hora.getSemi_cama().reservar(cual_numero);\r\n        }\r\n        if (cual_bus == SALON_CAMA) {\r\n            hora.getSalonCama().reservar(cual_numero);\r\n        }\r\n    }\r\n\r\n    public Asiento getAsiento(int cual_bus, int cual_numero, int cual_horario) {\r\n        Abastecimiento hora = abastecimientoList.get(cual_horario - 8);\r\n        if (cual_bus == SEMI_CAMA) {\r\n            return hora.getSemi_cama().getAsiento(cual_numero);\r\n        }\r\n        else {\r\n            return hora.getSalonCama().getAsiento(cual_numero);\r\n        }\r\n    }\r\n    public Bus getBus(int cual_bus, int cual_horario){\r\n        Abastecimiento hora = abastecimientoList.get(cual_horario - 8);\r\n        if (cual_bus == SEMI_CAMA) {\r\n            return hora.getSemi_cama();\r\n        }\r\n        else {\r\n            return hora.getSalonCama();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/proyecto1/src/main/java/Logica/Estacion.java b/proyecto1/src/main/java/Logica/Estacion.java
--- a/proyecto1/src/main/java/Logica/Estacion.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/proyecto1/src/main/java/Logica/Estacion.java	(date 1688168824137)
@@ -4,7 +4,6 @@
 public class Estacion {
     public static final int SEMI_CAMA = 1;
     public static final int SALON_CAMA = 2;
-    private static Estacion instance;
     private ArrayList<Abastecimiento> abastecimientoList;
 
     public Estacion() {
@@ -14,26 +13,6 @@
             abastecimientoList.add(new Abastecimiento());
         }
     }
-
-    public void reservarAsiento(int cual_bus, int cual_numero, int cual_horario) {
-        Abastecimiento hora = abastecimientoList.get(cual_horario - 8);
-        if (cual_bus == SEMI_CAMA) {
-            hora.getSemi_cama().reservar(cual_numero);
-        }
-        if (cual_bus == SALON_CAMA) {
-            hora.getSalonCama().reservar(cual_numero);
-        }
-    }
-
-    public Asiento getAsiento(int cual_bus, int cual_numero, int cual_horario) {
-        Abastecimiento hora = abastecimientoList.get(cual_horario - 8);
-        if (cual_bus == SEMI_CAMA) {
-            return hora.getSemi_cama().getAsiento(cual_numero);
-        }
-        else {
-            return hora.getSalonCama().getAsiento(cual_numero);
-        }
-    }
     public Bus getBus(int cual_bus, int cual_horario){
         Abastecimiento hora = abastecimientoList.get(cual_horario - 8);
         if (cual_bus == SEMI_CAMA) {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/proyecto1/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" default=\"true\" project-jdk-name=\"openjdk-19\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/.idea/misc.xml	(date 1688165414601)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="openjdk-19" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="openjdk-19" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: proyecto1/src/main/java/Grafic/SeleccionViaje.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * clase que define el panel para seleccionar el el origen y destino, junto con el boton para buscar\r\n * @author Ignacio padilla\r\n * @author Joaquin garcia\r\n */\r\n\r\npackage Grafic;\r\n\r\nimport Grafic.Botones.BotonPasoVentan1;\r\nimport Logica.GenerarEstaciones;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport  java.io.*;\r\nimport javax.swing.ImageIcon;\r\n\r\n\r\npublic class SeleccionViaje extends JPanel {\r\n    private  JComboBox<String> ciudadOrigen;\r\n    private JComboBox<String> ciudadDestino;\r\n    private JButton confirmarButton;\r\n    private JLabel imagenUbicacion;\r\n    private JLabel salida;\r\n    private JLabel llegada;\r\n    private PanelVentanas panelVentanas;\r\n    private String[] ciudades;\r\n    private String origen;\r\n    private String destino;\r\n    private static SeleccionViaje instance;\r\n\r\n    private GenerarEstaciones generarEstaciones;\r\n\r\n    /**\r\n     * metodo constructor para la seleccion de viaje, en la que se selecciona un origen y destino\r\n     * @param panelVentanas es la ventana donde se ubican la seleccion de origen y destino\r\n     * @throws IOException\r\n     */\r\n    private SeleccionViaje(PanelVentanas panelVentanas) throws IOException {\r\n        this.panelVentanas=panelVentanas;\r\n        this.setLayout(null);\r\n        this.setBackground(new Color(245,245,245));\r\n\r\n        ciudades=new String[]{\"Concepcion\", \"Chillan\", \"Santiago\", \"Yumbel\"};\r\n        // estos son los desplegables con la lista de arriba\r\n        ciudadOrigen = new JComboBox<>(ciudades);\r\n        ciudadDestino = new JComboBox<>(ciudades);\r\n        generarEstaciones= new GenerarEstaciones(ciudades);\r\n        ciudadOrigen.addActionListener(new SeleccionOrigen());\r\n        ciudadDestino.addActionListener(new SelecionDestino());\r\n\r\n        salida=new JLabel(\"SELECCIONAR CIUDAD DE ORIGEN : \");\r\n        llegada=new JLabel(\"SELECCIONAR CIUDAD DE LLEGADA :\");\r\n\r\n        confirmarButton = new BotonPasoVentan1(this,panelVentanas,\"ยก BUSCAR !\",generarEstaciones);\r\n        confirmarButton.setEnabled(false);\r\n        confirmarButton.setBackground(new Color(255,99,71));\r\n\r\n        imagenUbicacion = new JLabel();\r\n        ImageIcon imagen = new ImageIcon(\"C:\\\\Users\\\\igpad\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Proyecto_S1\\\\proyecto1\\\\src\\\\main\\\\java\\\\JPG\\\\gps1.png\");\r\n        imagenUbicacion.setIcon(imagen);\r\n\r\n        int distancia=330;\r\n        salida.setBounds(distancia, 70, 300,20);\r\n        this.add(salida);\r\n        llegada.setBounds(distancia, 230, 300,20);\r\n        this.add(llegada);\r\n\r\n        ciudadOrigen.setBounds(distancia,100,300,100);\r\n        this.add(ciudadOrigen);\r\n        ciudadDestino.setBounds(distancia,250,300,100);\r\n        this.add(ciudadDestino);\r\n\r\n        imagenUbicacion.setBounds(60,120,192,192);\r\n        this.add(imagenUbicacion);\r\n        confirmarButton.setBounds(210,450,350,150);\r\n        this.add(confirmarButton);\r\n    }\r\n\r\n    /** implementacion de patron singleton con el objetivo que haya una unica instancia de SeleccionViaje */\r\n    public static SeleccionViaje getInstance(PanelVentanas panelVentanas) throws IOException {\r\n        if (instance == null) {\r\n            instance = new SeleccionViaje(panelVentanas);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n     * metodo que implementa escuchador para el boton donde se selecciona el origen\r\n     */\r\n    public class SeleccionOrigen implements ActionListener {\r\n        public void actionPerformed(ActionEvent ae) {\r\n            origen = (String) ciudadOrigen.getSelectedItem();\r\n            verificar();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * metodo para conseguir el origen\r\n     * @return retorna el origen\r\n     */\r\n    public String getOrigen(){\r\n        return origen;\r\n    }\r\n\r\n    /**\r\n     * metodo que implementa el escuchador para el boton para seleccionar el destino\r\n     */\r\n    public class SelecionDestino implements ActionListener {\r\n        public void actionPerformed(ActionEvent ae) {\r\n            destino = (String) ciudadDestino.getSelectedItem();\r\n            verificar();\r\n        }\r\n    }\r\n    public void verificar(){\r\n        if ((destino==origen) || destino==null || origen==null){\r\n            confirmarButton.setEnabled(false);\r\n        }\r\n        else {\r\n            confirmarButton.setEnabled(true);\r\n        }\r\n    }\r\n    public void reset(){\r\n        destino=null;\r\n        origen=null;\r\n        verificar();\r\n    }\r\n    /**\r\n     * metodo para conseguir el destino\r\n     * @return retorna el destino\r\n     */\r\n    public String getDestino(){\r\n        return destino;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/proyecto1/src/main/java/Grafic/SeleccionViaje.java b/proyecto1/src/main/java/Grafic/SeleccionViaje.java
--- a/proyecto1/src/main/java/Grafic/SeleccionViaje.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/proyecto1/src/main/java/Grafic/SeleccionViaje.java	(date 1688172631765)
@@ -29,7 +29,6 @@
     private String origen;
     private String destino;
     private static SeleccionViaje instance;
-
     private GenerarEstaciones generarEstaciones;
 
     /**
Index: proyecto1/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>Proyecto_1</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>19</maven.compiler.source>\r\n        <maven.compiler.target>19</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>5.9.2</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>5.9.2</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>5.9.2</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/proyecto1/pom.xml b/proyecto1/pom.xml
--- a/proyecto1/pom.xml	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/proyecto1/pom.xml	(date 1688179032647)
@@ -44,6 +44,11 @@
             <version>5.9.2</version>
             <scope>compile</scope>
         </dependency>
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter-migration-support</artifactId>
+            <version>5.0.0-M4</version>
+        </dependency>
     </dependencies>
 
 </project>
\ No newline at end of file
Index: proyecto1/src/main/java/Grafic/PanelVentanas.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * clase que define el panel Ventanas\r\n * @author Ignacio padilla\r\n * @author Joaquin garcia\r\n */\r\n\r\npackage Grafic;\r\n\r\nimport Logica.Bus;\r\nimport Logica.Estacion;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.IOException;\r\npublic class PanelVentanas extends JPanel{\r\n    private SeleccionViaje seleccionViaje;\r\n    private SeleccionBus seleccionBus;\r\n    private SeleccionAsientos seleccionAsientos;\r\n\r\n    /**\r\n     * metodo constructor de el panel Ventana el cual genera las ventanas\r\n     * @throws IOException\r\n     */\r\n    public PanelVentanas() throws IOException {\r\n        super();\r\n        this.setLayout(new BorderLayout());\r\n\r\n\r\n        seleccionViaje = SeleccionViaje.getInstance(this);\r\n        avanceVentana1();\r\n    }\r\n\r\n    /**\r\n     * metodo para costruir la ventana 1\r\n     */\r\n    public void avanceVentana1(){\r\n        removeAll();\r\n        this.add(seleccionViaje, BorderLayout.CENTER);\r\n        revalidate();\r\n        repaint();\r\n    }\r\n    /**\r\n     * metodo para costruir la ventana 2\r\n     */\r\n    public void avanceVentana2(Estacion estacion){\r\n        removeAll();\r\n        seleccionBus = new SeleccionBus(this, estacion);\r\n        this.add(seleccionBus, BorderLayout.CENTER);\r\n        revalidate();\r\n        repaint();\r\n    }\r\n    /**\r\n     * metodo para costruir la ventana 3\r\n     */\r\n        public void avanceVentana3(int op, Bus bus){\r\n        removeAll();\r\n        if(op==1){\r\n            seleccionAsientos=new SeleccionAsientos(this,op,bus);\r\n            this.add(seleccionAsientos, BorderLayout.CENTER);\r\n        }\r\n        else if(op==2){\r\n            seleccionAsientos=new SeleccionAsientos(this,op,bus);\r\n            this.add(seleccionAsientos, BorderLayout.CENTER);\r\n        }\r\n        revalidate();\r\n        repaint();\r\n    }/**\r\n     * metodo para costruir la ventana de retroceso\r\n     */\r\n    public void retrocesoVentana(int ventana){\r\n        removeAll();\r\n        if(ventana==1){\r\n            this.add(seleccionViaje, BorderLayout.CENTER);\r\n        }\r\n        if(ventana==2){\r\n            this.add(seleccionBus, BorderLayout.CENTER);\r\n        }\r\n        if(ventana==3){\r\n            seleccionViaje.reset();\r\n            this.add(seleccionViaje, BorderLayout.CENTER);\r\n        }\r\n        revalidate();\r\n        repaint();\r\n    }\r\n\r\n    public void paint (Graphics g) {\r\n        super.paint(g);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/proyecto1/src/main/java/Grafic/PanelVentanas.java b/proyecto1/src/main/java/Grafic/PanelVentanas.java
--- a/proyecto1/src/main/java/Grafic/PanelVentanas.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/proyecto1/src/main/java/Grafic/PanelVentanas.java	(date 1688172189322)
@@ -52,7 +52,7 @@
     /**
      * metodo para costruir la ventana 3
      */
-        public void avanceVentana3(int op, Bus bus){
+    public void avanceVentana3(int op, Bus bus){
         removeAll();
         if(op==1){
             seleccionAsientos=new SeleccionAsientos(this,op,bus);
Index: proyecto1/src/main/java/Grafic/Asiento.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * clase que define el boton para los asientos\r\n * @author Ignacio padilla\r\n * @author Joaquin garcia\r\n */\r\n\r\npackage Grafic;\r\n\r\nimport Logica.Bus;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class Asiento  extends JButton {\r\n    private int numAsiento;\r\n    private Bus bus;\r\n    private SeleccionAsientos seleccionAsientos;\r\n    private boolean estado=false;\r\n\r\n    /**\r\n     * metodo constructor de Asiento que se encarga de generar y asignar un numero a los asientos para cada bus, junto\r\n     * con un escuchador para poder seleccionar el asiento deseado\r\n     * @param numAsiento es el numero del asiento\r\n     * @param bus es el bus\r\n     * @param seleccionAsientos es la clase que se encarga de la seleccion de asientos\r\n     */\r\n    public Asiento(int numAsiento, Bus bus, SeleccionAsientos seleccionAsientos){\r\n        super(Integer.toString(numAsiento));\r\n        this.seleccionAsientos=seleccionAsientos;\r\n        this.bus=bus;\r\n        this.numAsiento=numAsiento;\r\n        this.addActionListener(new EscuchadorBotton());\r\n    }\r\n\r\n    /**\r\n     * metodo que se encarga de escuchar la accion de seleccionar los asientos, asiento que su estado sea seleccionado\r\n     * o no seleccionado\r\n     */\r\n    public class EscuchadorBotton implements ActionListener {\r\n        public void actionPerformed(ActionEvent ae) {\r\n            if (estado==false && bus.getAsiento(numAsiento).getEstado()==false){\r\n                seleccionAsientos.seleccionar(numAsiento);\r\n                estado=true;\r\n            }\r\n            else if (estado==true && bus.getAsiento(numAsiento).getEstado()==false){\r\n                seleccionAsientos.desselccionar(numAsiento);\r\n                estado=false;\r\n            }\r\n            seleccionAsientos.repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * metodo que bloquea la seleccion de asientos\r\n     */\r\n    public void bloquear(){\r\n        this.setEnabled(false);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/proyecto1/src/main/java/Grafic/Asiento.java b/proyecto1/src/main/java/Grafic/Asiento.java
--- a/proyecto1/src/main/java/Grafic/Asiento.java	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/proyecto1/src/main/java/Grafic/Asiento.java	(date 1688165247217)
@@ -18,6 +18,7 @@
     private Bus bus;
     private SeleccionAsientos seleccionAsientos;
     private boolean estado=false;
+    private Asiento asiento;
 
     /**
      * metodo constructor de Asiento que se encarga de generar y asignar un numero a los asientos para cada bus, junto
@@ -28,12 +29,21 @@
      */
     public Asiento(int numAsiento, Bus bus, SeleccionAsientos seleccionAsientos){
         super(Integer.toString(numAsiento));
+        asiento=this;
         this.seleccionAsientos=seleccionAsientos;
         this.bus=bus;
         this.numAsiento=numAsiento;
         this.addActionListener(new EscuchadorBotton());
     }
 
+    public void seleccionado(){
+
+        asiento.setText("X");
+    }
+    public void noseleccionado(){
+        asiento.setText(Integer.toString(numAsiento));
+    }
+
     /**
      * metodo que se encarga de escuchar la accion de seleccionar los asientos, asiento que su estado sea seleccionado
      * o no seleccionado
@@ -43,10 +53,12 @@
             if (estado==false && bus.getAsiento(numAsiento).getEstado()==false){
                 seleccionAsientos.seleccionar(numAsiento);
                 estado=true;
+                seleccionado();
             }
             else if (estado==true && bus.getAsiento(numAsiento).getEstado()==false){
                 seleccionAsientos.desselccionar(numAsiento);
                 estado=false;
+                noseleccionado();
             }
             seleccionAsientos.repaint();
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"da20afa9-0b0e-45f9-9c31-cdb741cac75f\" name=\"Changes\" comment=\"&quot;finalizacion basica de interfaz&quot;\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-06-2023_23_47__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-06-2023_23_47__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/README.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/README.md\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/proyecto1/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/proyecto1/pom.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2RRtm7WLQoHj75YJpGgVJktOaoO\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"last_directory_selection\": \"C:/Users/chout/OneDrive/Documentos/GitHub/Proyecto_S1/proyecto1/src/main/java/Logica\",\r\n    \"last_opened_file_path\": \"C:/Users/igpad/OneDrive/Documentos/GitHub/Proyecto_S1\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"Logica\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"EstacionTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Proyecto_1\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Logica.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"Logica\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Logica.EstacionTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.EstacionTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"da20afa9-0b0e-45f9-9c31-cdb741cac75f\" name=\"Changes\" comment=\"\" />\r\n      <created>1687224877819</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1687224877819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"&quot;logica basica completada&quot;\">\r\n      <created>1687224969526</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687224969526</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"&quot;logica completada e incorporacion de patrones&quot;\">\r\n      <created>1687239987770</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687239987770</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"&quot;incorporacion de nombres aleatorios asociados a buses&quot;\">\r\n      <created>1687289086634</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687289086634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"&quot;pruebas de interfaz seleccion de viaje&quot;\">\r\n      <created>1687305738722</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687305738722</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"&quot;creacion de clases graficas e implementacion de cambio ventanas&quot;\">\r\n      <created>1687487500194</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687487500194</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"&quot;comienzo interfaz basica seleccion bus&quot;\">\r\n      <created>1687630448969</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687630448969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"&quot;implementacion de logica a la ventana 1&quot;\">\r\n      <created>1687648261460</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687648261460</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"&quot;logica basica completada&quot;\" />\r\n    <MESSAGE value=\"&quot;logica completada e incorporacion de patrones&quot;\" />\r\n    <MESSAGE value=\"&quot;incorporacion de nombres aleatorios asociados a buses&quot;\" />\r\n    <MESSAGE value=\"&quot;pruebas de interfaz seleccion de viaje&quot;\" />\r\n    <MESSAGE value=\"&quot;creacion de clases graficas e implementacion de cambio ventanas&quot;\" />\r\n    <MESSAGE value=\"&quot;comienzo interfaz basica seleccion bus&quot;\" />\r\n    <MESSAGE value=\"&quot;implementacion de logica a la ventana 1&quot;\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"&quot;implementacion de logica a la ventana 1&quot;\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cba0f0cc06ad87f71a21c5b02694d40a4069da6c)
+++ b/.idea/workspace.xml	(date 1688179363885)
@@ -6,11 +6,15 @@
   <component name="ChangeListManager">
     <list default="true" id="da20afa9-0b0e-45f9-9c31-cdb741cac75f" name="Changes" comment="&quot;finalizacion basica de interfaz&quot;">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-06-2023_23_47__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-06-2023_23_47__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/proyecto1/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/proyecto1/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/Test/java/Logica/AbastecimientoTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/Test/java/Logica/AsientoTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/Test/java/Logica/EstacionTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/java/Grafic/Asiento.java" beforeDir="false" afterPath="$PROJECT_DIR$/proyecto1/src/main/java/Grafic/Asiento.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/java/Grafic/PanelVentanas.java" beforeDir="false" afterPath="$PROJECT_DIR$/proyecto1/src/main/java/Grafic/PanelVentanas.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/java/Grafic/SeleccionViaje.java" beforeDir="false" afterPath="$PROJECT_DIR$/proyecto1/src/main/java/Grafic/SeleccionViaje.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proyecto1/src/main/java/Logica/Estacion.java" beforeDir="false" afterPath="$PROJECT_DIR$/proyecto1/src/main/java/Logica/Estacion.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -52,11 +56,10 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
     "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
-    "last_directory_selection": "C:/Users/chout/OneDrive/Documentos/GitHub/Proyecto_S1/proyecto1/src/main/java/Logica",
     "last_opened_file_path": "C:/Users/igpad/OneDrive/Documentos/GitHub/Proyecto_S1",
     "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2"
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0"
   }
 }]]></component>
   <component name="RecentsManager">
@@ -65,29 +68,8 @@
     </key>
     <key name="CreateTestDialog.RecentsKey">
       <recent name="Logica" />
+      <recent name="Grafic" />
     </key>
-  </component>
-  <component name="RunManager">
-    <configuration name="EstacionTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="Proyecto_1" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="Logica.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="Logica" />
-      <option name="MAIN_CLASS_NAME" value="Logica.EstacionTest" />
-      <option name="TEST_OBJECT" value="class" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="JUnit.EstacionTest" />
-      </list>
-    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
